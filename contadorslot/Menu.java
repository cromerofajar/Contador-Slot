/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contadorslot;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author Caos5000
 */
public class Menu extends javax.swing.JFrame {

    int mod=0;
    int nPis=0;
    int modCarrera=0;
    static int vueltasP1=0,vueltasP2=0,vueltasP3=0,vueltasP4=0,vueltasP5=0,vueltasP6=0,vueltasP7=0,vueltasP8=0;
    int vueltasTotal=0;
    String [] modos = { "Carrera", "Entrenos", "Cancelar" };
    String [] modsCarrera = {" Por tiempo","Por Vueltas","Cancelar"};
    String [] guardModNom ={"Exportar PDF","Guardar en base de datos","Cancelar"};
    String [] nPistas = { "2", "4", "6" , "8" };
    String pilot1,pilot2,pilot3,pilot4,pilot5,pilot6,pilot7,pilot8;
    String [] nPilot ={"","","","","","","",""};
    int [] tVueltas={0,0,0,0,0,0,0,0};
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Modo = new javax.swing.JButton();
        Ayuda = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        Pausar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Pista1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Pista2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Pista3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        Pista4 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        Pista5 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        Pista6 = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        Pista7 = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        Pista8 = new javax.swing.JTextArea();
        Iniciar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        Terminar = new javax.swing.JButton();
        Cargar = new javax.swing.JButton();
        GuardarC = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Contador Slot");

        Modo.setText("Modo");
        Modo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModoActionPerformed(evt);
            }
        });

        Ayuda.setText("Ayuda");
        Ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AyudaActionPerformed(evt);
            }
        });

        Modificar.setText("Modificar");
        Modificar.setVisible(false);
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        Pausar.setText("Pausar");
        Pausar.setVisible(false);
        Pausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PausarActionPerformed(evt);
            }
        });

        Pista1.setColumns(20);
        Pista1.setRows(5);
        Pista1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Pista1.setFocusTraversalPolicyProvider(true);
        Pista1.setVisible(false);
        Pista1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Pista1);

        Pista2.setColumns(20);
        Pista2.setRows(5);
        Pista2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Pista2.setVisible(false);
        Pista2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(Pista2);

        Pista3.setColumns(20);
        Pista3.setRows(5);
        Pista3.setVisible(false);
        Pista3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista3KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(Pista3);

        Pista4.setColumns(20);
        Pista4.setRows(5);
        Pista4.setVisible(false);
        Pista4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista4KeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(Pista4);

        Pista5.setColumns(20);
        Pista5.setRows(5);
        Pista5.setVisible(false);
        Pista5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista5KeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(Pista5);

        Pista6.setColumns(20);
        Pista6.setRows(5);
        Pista6.setVisible(false);
        Pista6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista6KeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(Pista6);

        Pista7.setColumns(20);
        Pista7.setRows(5);
        Pista7.setVisible(false);
        Pista7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista7KeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(Pista7);

        Pista8.setColumns(20);
        Pista8.setRows(5);
        Pista8.setVisible(false);
        Pista8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Pista8KeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(Pista8);

        Iniciar.setText("Iniciar");
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });
        Iniciar.setVisible(false);

        Guardar.setVisible(false);
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        Terminar.setVisible(false);
        Terminar.setText("Terminar");
        Terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerminarActionPerformed(evt);
            }
        });

        Cargar.setText("Cargar resultado de una carrera");
        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });

        GuardarC.setVisible(false);
        GuardarC.setText("Guardar");
        GuardarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Modo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Modificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Ayuda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Cargar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Iniciar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Pausar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Terminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GuardarC)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Modo)
                    .addComponent(Ayuda)
                    .addComponent(Modificar)
                    .addComponent(Cargar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Iniciar)
                    .addComponent(Pausar)
                    .addComponent(Guardar)
                    .addComponent(Terminar)
                    .addComponent(GuardarC))
                .addGap(0, 75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void PausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PausarActionPerformed
        if(Pausar.getText()=="Pausar"){
            Pausar.setText("Reanudar");
            if(modCarrera==0){
                
            }
            else if(modCarrera==1){
                modCarrera=2;
            }
        }else{
            Pausar.setText("Pausar");
            if(modCarrera==0){
                
            }
            else if(modCarrera==2){
                modCarrera=1;
            }
        }
    }//GEN-LAST:event_PausarActionPerformed

    private void ModoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModoActionPerformed

        mod=JOptionPane.showOptionDialog(null, "Que modo desea usar?", "Modo", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, modos,modos[0]);
        
        mod++;
        
        switch(mod){
            case 1:
                Iniciar.setVisible(true);
                Pausar.setVisible(false);
                Modificar.setVisible(true);
                Cargar.setVisible(false);
                GuardarC.setVisible(false);
                nPis=JOptionPane.showOptionDialog(null, "Numero de pistas\n", "Pistas", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, nPistas,nPistas[0]);
                switch(nPis){
                    case -1:
                        Iniciar.setVisible(false);
                        Modificar.setVisible(false);
                        Cargar.setVisible(true);
                        break;
                    case 0:
                        pilot1=JOptionPane.showInputDialog("Nombre piloto1");
                        Pista1.setVisible(true);
                        Pista1.setText(pilot1);
                        Pista1.setEditable(false);
                        pilot2=JOptionPane.showInputDialog("Nombre piloto2");
                        Pista2.setVisible(true);
                        Pista2.setText(pilot2);
                        Pista2.setEditable(false);
                        Pista3.setVisible(false);
                        Pista4.setVisible(false);
                        Pista5.setVisible(false);
                        Pista6.setVisible(false);
                        Pista7.setVisible(false);
                        Pista8.setVisible(false);
                        pilot3="";
                        pilot4="";
                        pilot5="";
                        pilot6="";
                        pilot7="";
                        pilot8="";
                        nPilot[0]=pilot1;
                        nPilot[1]=pilot2;
                        break;
                    case 1:
                        pilot1=JOptionPane.showInputDialog("Nombre piloto1");
                        Pista1.setVisible(true);
                        Pista1.setText(pilot1);
                        Pista1.setEditable(false);
                        pilot2=JOptionPane.showInputDialog("Nombre piloto2");
                        Pista2.setVisible(true);
                        Pista2.setText(pilot2);
                        Pista2.setEditable(false);
                        pilot3=JOptionPane.showInputDialog("Nombre piloto3");
                        Pista3.setVisible(true);
                        Pista3.setText(pilot3);
                        Pista3.setEditable(false);
                        pilot4=JOptionPane.showInputDialog("Nombre piloto4");
                        Pista4.setVisible(true);
                        Pista4.setText(pilot4);
                        Pista4.setEditable(false);
                        Pista5.setVisible(false);
                        Pista6.setVisible(false);
                        Pista7.setVisible(false);
                        Pista8.setVisible(false);
                        pilot5="";
                        pilot6="";
                        pilot7="";
                        pilot8="";
                        nPilot[0]=pilot1;
                        nPilot[1]=pilot2;
                        nPilot[2]=pilot3;
                        nPilot[3]=pilot4;
                        break;
                    case 2:
                        pilot1=JOptionPane.showInputDialog("Nombre piloto1");
                        Pista1.setVisible(true);
                        Pista1.setText(pilot1);
                        Pista1.setEditable(false);
                        pilot2=JOptionPane.showInputDialog("Nombre piloto2");
                        Pista2.setVisible(true);
                        Pista2.setText(pilot2);
                        Pista2.setEditable(false);
                        pilot3=JOptionPane.showInputDialog("Nombre piloto3");
                        Pista3.setVisible(true);
                        Pista3.setText(pilot3);
                        Pista3.setEditable(false);
                        pilot4=JOptionPane.showInputDialog("Nombre piloto4");
                        Pista4.setVisible(true);
                        Pista4.setText(pilot4);
                        Pista4.setEditable(false);
                        pilot5=JOptionPane.showInputDialog("Nombre piloto5");
                        Pista5.setVisible(true);
                        Pista5.setText(pilot5);
                        pilot6=JOptionPane.showInputDialog("Nombre piloto6");
                        Pista5.setEditable(false);
                        Pista6.setVisible(true);
                        Pista6.setText(pilot6);
                        Pista6.setEditable(false);
                        Pista7.setVisible(false);
                        Pista8.setVisible(false);
                        pilot7="";
                        pilot8="";
                        nPilot[0]=pilot1;
                        nPilot[1]=pilot2;
                        nPilot[2]=pilot3;
                        nPilot[3]=pilot4;
                        nPilot[4]=pilot5;
                        nPilot[5]=pilot6;
                        break;
                    case 3:
                        pilot1=JOptionPane.showInputDialog("Nombre piloto1");
                        Pista1.setVisible(true);
                        Pista1.setText(pilot1);
                        Pista1.setEditable(false);
                        pilot2=JOptionPane.showInputDialog("Nombre piloto2");
                        Pista2.setVisible(true);
                        Pista2.setText(pilot2);
                        Pista2.setEditable(false);
                        pilot3=JOptionPane.showInputDialog("Nombre piloto3");
                        Pista3.setVisible(true);
                        Pista3.setText(pilot3);
                        Pista3.setEditable(false);
                        pilot4=JOptionPane.showInputDialog("Nombre piloto4");
                        Pista4.setVisible(true);
                        Pista4.setText(pilot4);
                        Pista4.setEditable(false);
                        pilot5=JOptionPane.showInputDialog("Nombre piloto5");
                        Pista5.setVisible(true);
                        Pista5.setText(pilot5);
                        Pista5.setEditable(false);
                        pilot6=JOptionPane.showInputDialog("Nombre piloto6");
                        Pista6.setVisible(true);
                        Pista6.setText(pilot6);
                        Pista6.setEditable(false);
                        pilot7=JOptionPane.showInputDialog("Nombre piloto7");
                        Pista7.setVisible(true);
                        Pista7.setText(pilot7);
                        Pista7.setEditable(false);
                        pilot8=JOptionPane.showInputDialog("Nombre piloto8");
                        Pista8.setVisible(true);
                        Pista8.setText(pilot8);
                        Pista8.setEditable(false);
                        nPilot[0]=pilot1;
                        nPilot[1]=pilot2;
                        nPilot[2]=pilot3;
                        nPilot[3]=pilot4;
                        nPilot[4]=pilot5;
                        nPilot[5]=pilot6;
                        nPilot[6]=pilot7;
                        nPilot[7]=pilot8;
                        break;
                }
                break;
            
            case 2:
                Iniciar.setVisible(false);
                Pausar.setVisible(false);
                Modificar.setVisible(false);
                Cargar.setVisible(false);
                Terminar.setVisible(true);
                GuardarC.setVisible(false);
                Pista1.setText("");
                Pista2.setText("");
                Pista3.setText("");
                Pista4.setText("");
                Pista5.setText("");
                Pista6.setText("");
                Pista7.setText("");
                Pista8.setText("");
                nPis=JOptionPane.showOptionDialog(null, "Numero de pistas\n", "Pistas", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, nPistas,nPistas[0]);
                switch(nPis){
                    case 0:
                        Pista1.setVisible(true);
                        Pista1.setEditable(false);
                        Pista2.setVisible(true);
                        Pista2.setEditable(false);
                        Pista3.setVisible(false);
                        Pista4.setVisible(false);
                        Pista5.setVisible(false);
                        Pista6.setVisible(false);
                        Pista7.setVisible(false);
                        Pista8.setVisible(false);
                        break;
                    case 1:
                        Pista1.setVisible(true);
                        Pista1.setEditable(false);
                        Pista2.setVisible(true);
                        Pista2.setEditable(false);
                        Pista3.setVisible(true);
                        Pista3.setEditable(false);
                        Pista4.setVisible(true);
                        Pista4.setEditable(false);
                        Pista5.setVisible(false);
                        Pista6.setVisible(false);
                        Pista7.setVisible(false);
                        Pista8.setVisible(false);
                        break;
                    case 2:
                        Pista1.setVisible(true);
                        Pista1.setEditable(false);
                        Pista2.setVisible(true);
                        Pista2.setEditable(false);
                        Pista3.setVisible(true);
                        Pista3.setEditable(false);
                        Pista4.setVisible(true);
                        Pista4.setEditable(false);
                        Pista5.setVisible(true);
                        Pista5.setEditable(false);
                        Pista6.setVisible(true);
                        Pista6.setEditable(false);
                        Pista7.setVisible(false);
                        Pista8.setVisible(false);
                        break;
                    case 3:
                        Pista1.setVisible(true);
                        Pista1.setEditable(false);
                        Pista2.setVisible(true);
                        Pista2.setEditable(false);
                        Pista3.setVisible(true);
                        Pista3.setEditable(false);
                        Pista4.setVisible(true);
                        Pista4.setEditable(false);
                        Pista5.setVisible(true);
                        Pista5.setEditable(false);
                        Pista6.setVisible(true);
                        Pista6.setEditable(false);
                        Pista7.setVisible(true);
                        Pista7.setEditable(false);
                        Pista8.setVisible(true);
                        Pista8.setEditable(false);
                        break;
                }
                break;
            case 3:
                break;
        }
    }//GEN-LAST:event_ModoActionPerformed

    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        Modificar.setVisible(false);
        modCarrera=JOptionPane.showOptionDialog(null, "Que tipo de carrera desea?", "Carrera", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, modsCarrera,modsCarrera[0]);
        switch(modCarrera){
            case 0:
                Iniciar.setVisible(false);
                Pausar.setVisible(true);
                JOptionPane.showMessageDialog(null,"Por motivos de aplicación en Beta \nesta función no inicia carrera\nlos resultados se rellenaran con datos prederterminados.\nLa opción de guardado esta deshabilitada");
                switch(nPis){
                    case 0:
                        if(Pista1.getText().equals("")){}
                        else{
                        Pista1.setText(Pista1.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 10,43seg\nVuelta 3: 15,34seg\nVuelta 4: 10,34seg\nVuelta 5: 10,56seg\nVuelta 6: 11,05seg\nVuelta 7: 10,57seg\nVuelta 8: 11,12seg\nTotal: 8 vueltas");
                        tVueltas[0]=8;
                        }
                        if(Pista2.getText().equals("")){}
                        else{
                        Pista2.setText(Pista2.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 11,43seg\nVuelta 3: 11,34seg\nVuelta 4: 11,34seg\nVuelta 5: 10,45seg\nVuelta 6: 10,32seg\nVuelta 7: 10,15seg\nVuelta 8: 10,12seg\nTotal: 8 vueltas");
                        tVueltas[1]=8;
                        }
                        break;
                    case 1:
                        if(Pista1.getText().equals("")){}
                        else{
                        Pista1.setText(Pista1.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 10,43seg\nVuelta 3: 13,34seg\nVuelta 4: 10,34seg\nVuelta 5: 10,56seg\nVuelta 6: 11,05seg\nVuelta 7: 10,57seg\nVuelta 8: 11,12seg\nTotal: 8 vueltas");
                        tVueltas[0]=8;
                        }
                        if(Pista2.getText().equals("")){}
                        else{
                        Pista2.setText(Pista2.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 11,43seg\nVuelta 3: 11,34seg\nVuelta 4: 11,34seg\nVuelta 5: 10,45seg\nVuelta 6: 10,32seg\nVuelta 7: 10,15seg\nVuelta 8: 10,12seg\nVuelta 9:10,04seg\nTotal: 9 vueltas");
                        tVueltas[1]=9;
                        }
                        if(Pista3.getText().equals("")){}
                        else{
                        Pista3.setText(Pista3.getText()+"\nVuelta 1: 12,01seg\nVuelta 2: 11,33seg\nVuelta 3: 11,41seg\nVuelta 4: 11,45seg\nVuelta 5: 12,05seg\nVuelta 6: 11,26seg\nVuelta 7: 11,39seg\nVuelta 8: 11,41seg\nTotal: 8 vueltas");
                        tVueltas[2]=8;
                        }
                        if(Pista4.getText().equals("")){}
                        else{
                        Pista4.setText(Pista4.getText()+"\nVuelta 1: 12,16seg\nVuelta 2: 12,34seg\nVuelta 3: 12,51seg\nVuelta 4: 11,34seg\nVuelta 5: 12,56seg\nVuelta 6: 12,12seg\nVuelta 7: 12,45seg\nTotal: 7 vueltas");
                        tVueltas[3]=7;
                        }
                        break;
                    case 2:
                        if(Pista1.getText().equals("")){}
                        else{
                        Pista1.setText(Pista1.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 10,43seg\nVuelta 3: 13,34seg\nVuelta 4: 10,34seg\nVuelta 5: 10,56seg\nVuelta 6: 11,05seg\nVuelta 7: 10,57seg\nVuelta 8: 11,12seg\nTotal: 8 vueltas");
                        tVueltas[0]=8;
                        }
                        if(Pista2.getText().equals("")){}
                        else{
                        Pista2.setText(Pista2.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 11,43seg\nVuelta 3: 11,34seg\nVuelta 4: 11,34seg\nVuelta 5: 10,45seg\nVuelta 6: 10,32seg\nVuelta 7: 10,15seg\nVuelta 8: 10,12seg\nVuelta 9:10,04seg\nTotal: 9 vueltas");
                        tVueltas[1]=9;
                        }
                        if(Pista3.getText().equals("")){}
                        else{
                        Pista3.setText(Pista3.getText()+"\nVuelta 1: 12,01seg\nVuelta 2: 11,33seg\nVuelta 3: 11,41seg\nVuelta 4: 11,45seg\nVuelta 5: 12,05seg\nVuelta 6: 11,26seg\nVuelta 7: 11,39seg\nVuelta 8: 11,41seg\nTotal: 8 vueltas");
                        tVueltas[2]=8;
                        }
                        if(Pista4.getText().equals("")){}
                        else{
                        Pista4.setText(Pista4.getText()+"\nVuelta 1: 12,16seg\nVuelta 2: 12,34seg\nVuelta 3: 12,51seg\nVuelta 4: 11,34seg\nVuelta 5: 12,56seg\nVuelta 6: 12,12seg\nVuelta 7: 12,45seg\nTotal: 7 vueltas");
                        tVueltas[3]=7;
                        }
                        if(Pista5.getText().equals("")){}
                        else{
                        Pista5.setText(Pista5.getText()+"\nVuelta 1: 10,03seg\nVuelta 2: 10,20seg\nVuelta 3: 10,21seg\nVuelta 5: 10,23seg\nVyelta 5: 10,42seg\nVuelta 6: 10,34seg\nVuelta 7: 16,34seg\nVuelta 8: 10,35seg\nTotal: 8 vueltas");
                        tVueltas[4]=8;
                        }
                        if(Pista6.getText().equals("")){}
                        else{
                        Pista6.setText(Pista6.getText()+"\nVuelta 1: 11,50seg\nVuelta 2: 10,14seg\nVuelta 3: 11,44seg\nVuelta 4: 10,24seg\nVuelta 5: 10,46seg\nVuelta 6: 11,05seg\nVuelta 7: 10,27seg\nVuelta 8: 11,42seg\nTotal: 8 vueltas");
                        tVueltas[5]=8;
                        }
                        break;
                    case 3:
                        if(Pista1.getText().equals("")){}
                        else{
                        Pista1.setText(Pista1.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 10,43seg\nVuelta 3: 13,34seg\nVuelta 4: 10,34seg\nVuelta 5: 10,56seg\nVuelta 6: 11,05seg\nVuelta 7: 10,57seg\nVuelta 8: 11,12seg\nTotal: 8 vueltas");
                        tVueltas[0]=8;
                        }
                        if(Pista2.getText().equals("")){}
                        else{
                        Pista2.setText(Pista2.getText()+"\nVuelta 1: 11,23seg\nVuelta 2: 11,43seg\nVuelta 3: 11,34seg\nVuelta 4: 11,34seg\nVuelta 5: 10,45seg\nVuelta 6: 10,32seg\nVuelta 7: 10,15seg\nVuelta 8: 10,12seg\nVuelta 9:10,04seg\nTotal: 9 vueltas");
                        tVueltas[1]=9;
                        }
                        if(Pista3.getText().equals("")){}
                        else{
                        Pista3.setText(Pista3.getText()+"\nVuelta 1: 12,01seg\nVuelta 2: 11,33seg\nVuelta 3: 11,41seg\nVuelta 4: 11,45seg\nVuelta 5: 12,05seg\nVuelta 6: 11,26seg\nVuelta 7: 11,39seg\nVuelta 8: 11,41seg\nTotal: 8 vueltas");
                        tVueltas[2]=8;
                        }
                        if(Pista4.getText().equals("")){}
                        else{
                        Pista4.setText(Pista4.getText()+"\nVuelta 1: 12,16seg\nVuelta 2: 12,34seg\nVuelta 3: 12,51seg\nVuelta 4: 11,34seg\nVuelta 5: 12,56seg\nVuelta 6: 12,12seg\nVuelta 7: 12,45seg\nTotal: 7 vueltas");
                        tVueltas[3]=7;
                        }
                        if(Pista5.getText().equals("")){}
                        else{
                        Pista5.setText(Pista5.getText()+"\nVuelta 1: 10,03seg\nVuelta 2: 10,20seg\nVuelta 3: 10,21seg\nVuelta 5: 10,23seg\nVyelta 5: 10,42seg\nVuelta 6: 10,34seg\nVuelta 7: 16,34seg\nVuelta 8: 10,35seg\nTotal: 8 vueltas");
                        tVueltas[4]=8;
                        }
                        if(Pista6.getText().equals("")){}
                        else{
                        Pista6.setText(Pista6.getText()+"\nVuelta 1: 11,50seg\nVuelta 2: 10,14seg\nVuelta 3: 11,44seg\nVuelta 4: 10,24seg\nVuelta 5: 10,46seg\nVuelta 6: 11,05seg\nVuelta 7: 10,27seg\nVuelta 8: 11,42seg\nTotal: 8 vueltas");
                        tVueltas[5]=8;
                        }
                        if(Pista7.getText().equals("")){}
                        else{
                        Pista7.setText(Pista7.getText()+"\nVuelta 1: 12,16seg\nVuelta 2: 12,34seg\nVuelta 3: 12,51seg\nVuelta 4: 11,34seg\nVuelta 5: 12,56seg\nVuelta 6: 12,12seg\nVuelta 7: 12,45seg\nTotal: 7 vueltas");
                        tVueltas[6]=7;
                        }
                        if(Pista8.getText().equals("")){}
                        else{
                        Pista8.setText(Pista8.getText()+"\nVuelta 1: 10,03seg\nVuelta 2: 10,20seg\nVuelta 3: 10,21seg\nVuelta 5: 10,23seg\nVyelta 5: 10,42seg\nVuelta 6: 10,34seg\nVuelta 7: 16,34seg\nVuelta 8: 10,35seg\nTotal: 8 vueltas");
                        tVueltas[7]=8;
                        }
                        break;
                }
                Pausar.setVisible(false);
                Terminar.setVisible(true);
                break;
            case 1:
                Iniciar.setVisible(false);
                Pausar.setVisible(true);
                try{
                    vueltasTotal=Integer.valueOf(JOptionPane.showInputDialog(null,"Introduce el numero de vueltas\n"
                            + "Solo teclado numerico"));
                }
                catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null,"Error\nIntroduzca un numero empleando\ncaracteres numericos.");
                    Pausar.setVisible(false);
                    Pista1.setVisible(false);
                    Pista2.setVisible(false);
                    Pista3.setVisible(false);
                    Pista4.setVisible(false);
                    Pista5.setVisible(false);
                    Pista6.setVisible(false);
                    Pista7.setVisible(false);
                    Pista8.setVisible(false);
                    
                }
        }
        
        
    }//GEN-LAST:event_IniciarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        String comprobante=".-";
        String nombre;
        switch(nPis){
            case 0:
                String [] DosP= {nPilot[0],nPilot[1]};
                int numero=JOptionPane.showOptionDialog(null, "Que pilo desea cambiar el nombre?\n", "Modificar", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, DosP,DosP[0]);
                switch(numero){
                    case 0:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot1);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot1=nombre;
                        nPilot[0]=pilot1;
                        Pista1.setText(pilot1);
                        }
                        break;
                    case 1:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot2);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot2=nombre;
                        nPilot[1]=pilot2;
                        Pista2.setText(pilot2);
                        }
                        break;

                }
                break;
            case 1:
                String [] CuatroP= {nPilot[0],nPilot[1],nPilot[2],nPilot[3]};
                numero=JOptionPane.showOptionDialog(null, "Que pilo desea cambiar el nombre?\n", "Modificar", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, CuatroP,CuatroP[0]);
                switch(numero){
                    case 0:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot1);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot1=nombre;
                        nPilot[0]=pilot1;
                        Pista1.setText(pilot1);
                        }
                        break;
                    case 1:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot2);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot2=nombre;
                        nPilot[1]=pilot2;
                        Pista2.setText(pilot2);
                        }
                        break;
                    case 2:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot3);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot3=nombre;
                        nPilot[2]=pilot3;
                        Pista3.setText(pilot3);
                        }
                        break;
                    case 3:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot4);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot4=nombre;
                        nPilot[3]=pilot4;
                        Pista4.setText(pilot4);
                        }
                        break;

                }
                break;
            case 2:
                String [] SeisP= {nPilot[0],nPilot[1],nPilot[2],nPilot[3],nPilot[4],nPilot[5]};
                numero=JOptionPane.showOptionDialog(null, "Que pilo desea cambiar el nombre?\n", "Modificar", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, SeisP,SeisP[0]);
                switch(numero){
                    case 0:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot1);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot1=nombre;
                        nPilot[0]=pilot1;
                        Pista1.setText(pilot1);
                        }
                        break;
                    case 1:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot2);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot2=nombre;
                        nPilot[1]=pilot2;
                        Pista2.setText(pilot2);
                        }
                        break;
                    case 2:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot3);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot3=nombre;
                        nPilot[2]=pilot3;
                        Pista3.setText(pilot3);
                        }
                        break;
                    case 3:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot4);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot4=nombre;
                        nPilot[3]=pilot4;
                        Pista4.setText(pilot4);
                        }
                        break;
                    case 4:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot5);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot5=nombre;
                        nPilot[4]=pilot5;
                        Pista5.setText(pilot5);
                        }
                        break;
                    case 5:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot6);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot6=nombre;
                        nPilot[5]=pilot6;
                        Pista6.setText(pilot6);
                        }
                        break;
                }
                break;
                case 3:
                String [] OchoP= {nPilot[0],nPilot[1],nPilot[2],nPilot[3],nPilot[4],nPilot[5],nPilot[6],nPilot[7]};
                numero=JOptionPane.showOptionDialog(null, "Que pilo desea cambiar el nombre?\n", "Modificar", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, OchoP,OchoP[0]);
                switch(numero){
                    case 0:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot1);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot1=nombre;
                        nPilot[0]=pilot1;
                        Pista1.setText(pilot1);
                        }
                        break;
                    case 1:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot2);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot2=nombre;
                        nPilot[1]=pilot2;
                        Pista2.setText(pilot2);
                        }
                        break;
                    case 2:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot3);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot3=nombre;
                        nPilot[2]=pilot3;
                        Pista3.setText(pilot3);
                        }
                        break;
                    case 3:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot4);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot4=nombre;
                        nPilot[3]=pilot4;
                        Pista4.setText(pilot4);
                        }
                        break;
                    case 4:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot5);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot5=nombre;
                        nPilot[4]=pilot5;
                        Pista5.setText(pilot5);
                        }
                        break;
                    case 5:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot6);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot6=nombre;
                        nPilot[5]=pilot6;
                        Pista6.setText(pilot6);
                        }
                        break;
                    case 6:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot7);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot7=nombre;
                        nPilot[6]=pilot7;
                        Pista7.setText(pilot7);
                        }
                        break;
                    case 7:
                        nombre=JOptionPane.showInputDialog(null,"Introduzca el nombre del piloto",pilot8);
                        comprobante=comprobante+nombre;
                        if(comprobante.startsWith(".-")&&comprobante.endsWith("null")){
                        }
                        else{
                        pilot8=nombre;
                        nPilot[7]=pilot8;
                        Pista8.setText(pilot8);
                        }
                        break;

                }
                break;
        }
    }//GEN-LAST:event_ModificarActionPerformed

    private void Pista1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista1KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_1 && !Pista1.getText().equals("")){
           vueltasP1++;
           Pista1.setText(Pista1.getText()+"\nVuelta "+vueltasP1);
           if(vueltasP1==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista1KeyPressed

    private void Pista2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista2KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_2 && !Pista2.getText().equals("")){
           vueltasP2++;
           Pista2.setText(Pista2.getText()+"\nVuelta "+vueltasP2);
           if(vueltasP2==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista2KeyPressed

    private void Pista3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista3KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_3 && !Pista3.getText().equals("")){
           vueltasP3++;
           Pista3.setText(Pista3.getText()+"\nVuelta "+vueltasP3);
           if(vueltasP3==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista3KeyPressed

    private void Pista4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista4KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_4 && !Pista4.getText().equals("")){
           vueltasP4++;
           Pista4.setText(Pista4.getText()+"\nVuelta "+vueltasP4);
           if(vueltasP4==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista4KeyPressed

    private void Pista5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista5KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_5 && !Pista5.getText().equals("")){
           vueltasP5++;
           Pista5.setText(Pista5.getText()+"\nVuelta "+vueltasP5);
           if(vueltasP5==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista5KeyPressed

    private void Pista6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista6KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_6 && !Pista6.getText().equals("")){
           vueltasP6++;
           Pista6.setText(Pista6.getText()+"\nVuelta "+vueltasP6);
           if(vueltasP6==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista6KeyPressed

    private void Pista7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista7KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_7 && !Pista7.getText().equals("")){
           vueltasP7++;
           Pista7.setText(Pista7.getText()+"\nVuelta "+vueltasP7);
           if(vueltasP7==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista7KeyPressed

    private void Pista8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Pista8KeyPressed
        if(modCarrera==1 && evt.getKeyCode()==KeyEvent.VK_8 && !Pista8.getText().equals("")){
           vueltasP8++;
           Pista8.setText(Pista8.getText()+"\nVuelta "+vueltasP8);
           if(vueltasP8==vueltasTotal){
           Guardar.setVisible(true);  
                    if(Pista1.getText().equals("")){}
                    else{
                        Pista1.setText(Pista1.getText()+"\nTotal: "+vueltasP1);
                    }   
                    if(Pista2.getText().equals("")){}
                    else{
                        Pista2.setText(Pista2.getText()+"\nTotal: "+vueltasP2);
                    }   
                    if(Pista3.getText().equals("")){}
                    else{
                        Pista3.setText(Pista3.getText()+"\nTotal: "+vueltasP3);
                    }   
                    if(Pista4.getText().equals("")){}
                    else{
                        Pista4.setText(Pista4.getText()+"\nTotal: "+vueltasP4);
                    }   
                    if(Pista5.getText().equals("")){}
                    else{
                        Pista5.setText(Pista5.getText()+"\nTotal: "+vueltasP5);
                    }   
                    if(Pista6.getText().equals("")){}
                    else{
                        Pista6.setText(Pista6.getText()+"\nTotal: "+vueltasP6);
                    }
                    if(Pista7.getText().equals("")){}
                    else{
                        Pista7.setText(Pista7.getText()+"\nTotal: "+vueltasP7);
                    }   
                    if(Pista8.getText().equals("")){}
                    else{
                        Pista8.setText(Pista8.getText()+"\nTotal: "+vueltasP8);    
                    }
                    modCarrera=2;
                    Pausar.setVisible(false);
                    Terminar.setVisible(true);
           }
        }
    }//GEN-LAST:event_Pista8KeyPressed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        int modGuard=0;
        int posicion=0;
        modGuard=JOptionPane.showOptionDialog(null, "Que desea?", "Guardado", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, guardModNom,guardModNom[0]);
        
        switch(modGuard){
            case 0:
        {
            try {
                String nombreCarrera=JOptionPane.showInputDialog(null,"Como se llama la carrera?");
                FileOutputStream pdf = new FileOutputStream(nombreCarrera+".pdf");
                Document datos=new Document();
                PdfWriter.getInstance(datos, pdf);
                datos.open();
                Paragraph titulo=new Paragraph("Resultado de "+nombreCarrera);
                titulo.setAlignment(1);
                datos.add(titulo);
                datos.add(new Paragraph(" "));
                if(Pista1.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[0]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[0]));
                    datos.add(new Paragraph("Pista: "+1));
                    datos.add(new Paragraph("Vueltas: "+vueltasP1));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista2.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[1]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[1]));
                    datos.add(new Paragraph("Pista: "+2));
                    datos.add(new Paragraph("Vueltas: "+vueltasP2));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista3.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[2]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[2]));
                    datos.add(new Paragraph("Pista: "+3));
                    datos.add(new Paragraph("Vueltas: "+vueltasP3));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista4.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[3]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[3]));
                    datos.add(new Paragraph("Pista: "+4));
                    datos.add(new Paragraph("Vueltas: "+vueltasP4));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista5.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[4]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[4]));
                    datos.add(new Paragraph("Pista: "+5));
                    datos.add(new Paragraph("Vueltas: "+vueltasP3));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista6.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[5]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[5]));
                    datos.add(new Paragraph("Pista: "+6));
                    datos.add(new Paragraph("Vueltas: "+vueltasP6));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista7.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[6]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[6]));
                    datos.add(new Paragraph("Pista: "+7));
                    datos.add(new Paragraph("Vueltas: "+vueltasP6));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(Pista8.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[7]+"?"));
                    datos.add(new Paragraph("Nombre: "+nPilot[7]));
                    datos.add(new Paragraph("Pista: "+8));
                    datos.add(new Paragraph("Vueltas: "+vueltasP8));
                    datos.add(new Paragraph("Posicion: "+posicion));
                    datos.add(new Paragraph(" "));
                }
                if(datos.isOpen()){
                    datos.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        }
        break;
            case 1:
                String nombreCarrera=JOptionPane.showInputDialog(null,"Como se llama la carrera?");
                BaseDeDatos bd=new BaseDeDatos();
                JOptionPane.showMessageDialog(null, bd.crearTablas(nombreCarrera));
                if(Pista1.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[0]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[0],1,vueltasP1,posicion));
                }   
                if(Pista2.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[1]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[1],2,vueltasP2,posicion));
                }   
                if(Pista3.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[2]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[2],3,vueltasP3,posicion));
                }   
                if(Pista4.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[3]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[3],4,vueltasP4,posicion));
                }   
                if(Pista5.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[4]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[4],5,vueltasP5,posicion));
                }   
                if(Pista6.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[5]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[5],6,vueltasP6,posicion));
                }
                if(Pista7.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[6]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[6],7,vueltasP7,posicion));
                }   
                if(Pista8.getText().equals("")){}
                else{
                    posicion=Integer.valueOf(JOptionPane.showInputDialog(null,"En que posicion quedo "+nPilot[7]+"?"));
                    JOptionPane.showMessageDialog(null,bd.añadirPiloto(nombreCarrera,nPilot[7],8,vueltasP8,posicion));    
                }
        }
        
    }//GEN-LAST:event_GuardarActionPerformed

    private void TerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TerminarActionPerformed
        Pista1.setVisible(false);
        Pista2.setVisible(false);
        Pista3.setVisible(false);
        Pista4.setVisible(false);
        Pista5.setVisible(false);
        Pista6.setVisible(false);
        Pista7.setVisible(false);
        Pista8.setVisible(false);
        Guardar.setVisible(false);
        Cargar.setVisible(true);
        vueltasP1=0;
        vueltasP2=0;
        vueltasP3=0;
        vueltasP4=0;
        vueltasP5=0;
        vueltasP6=0;
        vueltasP7=0;
        vueltasP8=0;
        modCarrera=0;
        vueltasTotal=0;
        pilot1="";
        pilot2="";
        pilot3="";
        pilot4="";
        pilot5="";
        pilot6="";
        pilot7="";
        pilot8="";
        nPilot[0]="";
        nPilot[1]="";
        nPilot[2]="";
        nPilot[3]="";
        nPilot[4]="";
        nPilot[5]="";
        nPilot[6]="";
        nPilot[7]="";
        tVueltas[0]=0;
        tVueltas[1]=0;
        tVueltas[2]=0;
        tVueltas[3]=0;
        tVueltas[4]=0;
        tVueltas[5]=0;
        tVueltas[6]=0;
        tVueltas[7]=0;
        mod=0;
        nPis=0;
        Terminar.setVisible(false);
    }//GEN-LAST:event_TerminarActionPerformed

    private void AyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AyudaActionPerformed
       JOptionPane.showMessageDialog(null,"El manual no esta disponible en la version beta.\nDisculpe las molestias.");
    }//GEN-LAST:event_AyudaActionPerformed

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed
        BaseDeDatos bd=new BaseDeDatos();
        String nombreCarrera=JOptionPane.showInputDialog(null,"Nombre de la carrera a ver");
        String [] results;
        GuardarC.setVisible(true);
        results=bd.verResultado(nombreCarrera);
        if(!results[0].equals("")){
            Pista1.setVisible(true);
            Pista1.setText(results[0]);
        }else{
            Pista1.setVisible(false);
        }
        if(!results[1].equals("")){
            Pista2.setVisible(true);
            Pista2.setText(results[1]);
        }else{
            Pista2.setVisible(false);
        }
        if(!results[2].equals("")){
            Pista3.setVisible(true);
            Pista3.setText(results[2]);
        }else{
            Pista3.setVisible(false);
        }
        if(!results[3].equals("")){
            Pista4.setVisible(true);
            Pista4.setText(results[3]);
        }else{
            Pista4.setVisible(false);
        }
        if(!results[4].equals("")){
            Pista5.setVisible(true);
            Pista5.setText(results[4]);
        }else{
            Pista5.setVisible(false);
        }
        if(!results[5].equals("")){
            Pista6.setVisible(true);
            Pista6.setText(results[5]);
        }else{
            Pista6.setVisible(false);
        }
        if(!results[6].equals("")){
            Pista7.setVisible(true);
            Pista7.setText(results[6]);
        }else{
            Pista7.setVisible(false);
        }
        if(!results[7].equals("")){
            Pista8.setVisible(true);
            Pista8.setText(results[7]);
        }else{
            Pista8.setVisible(false);
        }
        
        
    }//GEN-LAST:event_CargarActionPerformed

    private void GuardarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCActionPerformed
        try {
                String nombreCarrera=JOptionPane.showInputDialog(null,"Como se llama la carrera?");
                FileOutputStream pdf = new FileOutputStream(nombreCarrera+".pdf");
                Document datos=new Document();
                PdfWriter.getInstance(datos, pdf);
                datos.open();
                Paragraph titulo=new Paragraph("Resultado de "+nombreCarrera);
                titulo.setAlignment(1);
                datos.add(titulo);
                datos.add(new Paragraph(" "));
                if(Pista1.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista1.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista2.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista2.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista3.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista3.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista4.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista4.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista5.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista5.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista6.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista6.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista7.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista7.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(Pista8.getText().equals("")){}
                else{
                    datos.add(new Paragraph(Pista8.getText()));
                    datos.add(new Paragraph(" "));
                }
                if(datos.isOpen()){
                    datos.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_GuardarCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ayuda;
    private javax.swing.JButton Cargar;
    private javax.swing.JButton Guardar;
    private javax.swing.JButton GuardarC;
    private javax.swing.JButton Iniciar;
    private static javax.swing.JButton Modificar;
    private javax.swing.JButton Modo;
    private static javax.swing.JButton Pausar;
    public javax.swing.JTextArea Pista1;
    public javax.swing.JTextArea Pista2;
    public javax.swing.JTextArea Pista3;
    public javax.swing.JTextArea Pista4;
    public javax.swing.JTextArea Pista5;
    public javax.swing.JTextArea Pista6;
    public javax.swing.JTextArea Pista7;
    public javax.swing.JTextArea Pista8;
    private javax.swing.JButton Terminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    // End of variables declaration//GEN-END:variables
}
